{"ast":null,"code":"import * as contactActions from './contact-app.actions';\nlet initialState = {\n  loading: false,\n  contacts: [],\n  errorMessage: ''\n};\nexport const reducer = (state = initialState, action) => {\n  let {\n    type,\n    payload\n  } = action;\n\n  switch (type) {\n    case contactActions.FETCH_CONTACT_REQUEST:\n      return { ...state,\n        loading: true\n      };\n\n    case contactActions.FETCH_CONTACT_SUCCESS:\n      return { ...state,\n        loading: false,\n        contacts: payload\n      };\n\n    case contactActions.FETCH_CONTACT_FAILURE:\n      return { ...state,\n        loading: false,\n        errorMessage: payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/workspace/05-RCJS-EVNG/React-JS/React-JS-Core-module/first-app/src/redux/contact-app/contact-app.reducer.ts"],"names":["contactActions","initialState","loading","contacts","errorMessage","reducer","state","action","type","payload","FETCH_CONTACT_REQUEST","FETCH_CONTACT_SUCCESS","FETCH_CONTACT_FAILURE"],"mappings":"AAAA,OAAO,KAAKA,cAAZ,MAAgC,uBAAhC;AASA,IAAIC,YAAyB,GAAE;AAC3BC,EAAAA,OAAO,EAAC,KADmB;AAE3BC,EAAAA,QAAQ,EAAC,EAFkB;AAG3BC,EAAAA,YAAY,EAAC;AAHc,CAA/B;AAMA,OAAO,MAAMC,OAAO,GAAG,CAACC,KAAK,GAACL,YAAP,EAAoBM,MAApB,KAA2C;AAC9D,MAAG;AAACC,IAAAA,IAAD;AAAMC,IAAAA;AAAN,MAAeF,MAAlB;;AACA,UAAQC,IAAR;AACI,SAAKR,cAAc,CAACU,qBAApB;AACI,aAAO,EACH,GAAGJ,KADA;AAEHJ,QAAAA,OAAO,EAAC;AAFL,OAAP;;AAIJ,SAAKF,cAAc,CAACW,qBAApB;AACI,aAAO,EACH,GAAGL,KADA;AAEHJ,QAAAA,OAAO,EAAC,KAFL;AAGHC,QAAAA,QAAQ,EAACM;AAHN,OAAP;;AAKJ,SAAKT,cAAc,CAACY,qBAApB;AACI,aAAO,EACH,GAAGN,KADA;AAEHJ,QAAAA,OAAO,EAAC,KAFL;AAGHE,QAAAA,YAAY,EAACK;AAHV,OAAP;;AAKJ;AAAQ,aAAOH,KAAP;AAlBZ;AAoBH,CAtBM","sourcesContent":["import * as contactActions from './contact-app.actions';\r\nimport {IContact} from \"../../components/models/IContact\";\r\n\r\nexport interface ContactState {\r\n    loading:boolean;\r\n    contacts:IContact[];\r\n    errorMessage:string;\r\n}\r\n\r\nlet initialState:ContactState ={\r\n    loading:false,\r\n    contacts:[] as IContact[],\r\n    errorMessage:''\r\n};\r\n\r\nexport const reducer = (state=initialState,action):ContactState =>{\r\n    let{type,payload}=action;\r\n    switch (type) {\r\n        case contactActions.FETCH_CONTACT_REQUEST:\r\n            return {\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case contactActions.FETCH_CONTACT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                contacts:payload\r\n            };\r\n        case contactActions.FETCH_CONTACT_FAILURE:\r\n            return {\r\n                ...state,\r\n                loading:false,\r\n                errorMessage:payload\r\n            };\r\n        default:return state;\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}