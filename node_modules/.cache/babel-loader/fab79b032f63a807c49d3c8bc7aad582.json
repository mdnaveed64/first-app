{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\workspace\\\\05-RCJS-EVNG\\\\React-JS\\\\React-JS-Core-module\\\\first-app\\\\src\\\\components\\\\ContactList.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport * as contactActions from '../redux/contact-app/contact-app.actions';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Spinner from \"./layout/Spinner\";\n\nlet ContactList = () => {\n  _s();\n\n  let dispatch = useDispatch();\n  let contactState = useSelector(state => {\n    return state.contact;\n  });\n  let {\n    contacts,\n    loading,\n    errorMessage\n  } = contactState;\n  useEffect(() => {\n    dispatch(contactActions.fetchContacts());\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(Spinner, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 27\n    }, this) : /*#__PURE__*/_jsxDEV(React.Fragment, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContactList, \"wT6Iy301jaQqiCHGMMrr6bhGI34=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ContactList;\nexport default ContactList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContactList\");","map":{"version":3,"sources":["D:/workspace/05-RCJS-EVNG/React-JS/React-JS-Core-module/first-app/src/components/ContactList.tsx"],"names":["React","useEffect","contactActions","useDispatch","useSelector","Spinner","ContactList","dispatch","contactState","state","contact","contacts","loading","errorMessage","fetchContacts"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAO,KAAKC,cAAZ,MAAgC,0CAAhC;AAEA,SAAQC,WAAR,EAAoBC,WAApB,QAAsC,aAAtC;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAOA,IAAIC,WAA4B,GAAE,MAAK;AAAA;;AACnC,MAAIC,QAAQ,GAACJ,WAAW,EAAxB;AAEA,MAAIK,YAAwC,GAACJ,WAAW,CAAEK,KAAD,IAA+C;AACpG,WAAOA,KAAK,CAACC,OAAb;AACH,GAFuD,CAAxD;AAGJ,MAAG;AAACC,IAAAA,QAAD;AAAUC,IAAAA,OAAV;AAAkBC,IAAAA;AAAlB,MAAgCL,YAAnC;AAEIP,EAAAA,SAAS,CAAC,MAAI;AACVM,IAAAA,QAAQ,CAACL,cAAc,CAACY,aAAf,EAAD,CAAR;AACH,GAFQ,EAEP,EAFO,CAAT;AAGA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,cAEQF,OAAO,gBAAG,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAAH,gBACH,QAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAHZ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH,CAvBD;;GAAIN,W;UACaH,W,EAEgCC,W;;;KAH7CE,W;AAwBJ,eAAeA,WAAf","sourcesContent":["import React, {useEffect} from \"react\";\r\nimport * as contactActions from '../redux/contact-app/contact-app.actions';\r\nimport * as contactReducer from '../redux/contact-app/contact-app.reducer';\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport Spinner from \"./layout/Spinner\";\r\n\r\ninterface IProps {}\r\ninterface IState {\r\n\r\n}\r\n\r\nlet ContactList:React.FC<IProps> =() =>{\r\n    let dispatch=useDispatch();\r\n\r\n    let contactState:contactReducer.ContactState=useSelector((state:{contact:contactReducer.ContactState})=>{\r\n        return state.contact;\r\n    });\r\nlet{contacts,loading,errorMessage}=contactState;\r\n\r\n    useEffect(()=>{\r\n        dispatch(contactActions.fetchContacts());\r\n    },[]);\r\n    return(\r\n        <React.Fragment>\r\n            {\r\n                loading ? <Spinner/>:\r\n                    <React.Fragment>\r\n                        \r\n                    </React.Fragment>\r\n            }\r\n\r\n\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default ContactList;\r\n"]},"metadata":{},"sourceType":"module"}