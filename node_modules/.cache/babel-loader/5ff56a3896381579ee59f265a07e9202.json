{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\workspace\\\\05-RCJS-EVNG\\\\React-JS\\\\React-JS-Core-module\\\\first-app\\\\src\\\\App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nfunction App() {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const toggleComplete = selectedTodo => {\n    const updatedTodos = todos.map(todo => {\n      if (todo === selectedTodo) {\n        return { ...todo,\n          complete: !todo.complete\n        };\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const addTodo = newTodo => {\n    if (newTodo !== \"\") {\n      setTodos([...todos, {\n        text: newTodo,\n        complete: false\n      }]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-app\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Todo App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      addTodo: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      toggleComplete: toggleComplete\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = App;\n;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["E:/workspace/05-RCJS-EVNG/React-JS/React-JS-Core-module/first-app/src/App.tsx"],"names":["React","useState","TodoForm","TodoList","App","todos","setTodos","toggleComplete","selectedTodo","updatedTodos","map","todo","complete","addTodo","newTodo","text"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,WAAP;AACA,SAASC,QAAT,QAAyB,uBAAzB;AACA,SAASC,QAAT,QAAyB,uBAAzB;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAc,EAAd,CAAlC;;AAEA,QAAMM,cAA8B,GAAGC,YAAY,IAAI;AACnD,UAAMC,YAAY,GAAGJ,KAAK,CAACK,GAAN,CAAUC,IAAI,IAAI;AACnC,UAAIA,IAAI,KAAKH,YAAb,EAA2B;AACvB,eAAO,EAAE,GAAGG,IAAL;AAAWC,UAAAA,QAAQ,EAAE,CAACD,IAAI,CAACC;AAA3B,SAAP;AACH;;AACD,aAAOD,IAAP;AACH,KALoB,CAArB;AAMAL,IAAAA,QAAQ,CAACG,YAAD,CAAR;AACH,GARD;;AAUA,QAAMI,OAAgB,GAAGC,OAAO,IAAI;AAChC,QAAIA,OAAO,KAAK,EAAhB,EAAoB;AAChBR,MAAAA,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAW;AAAEU,QAAAA,IAAI,EAAED,OAAR;AAAiBF,QAAAA,QAAQ,EAAE;AAA3B,OAAX,CAAD,CAAR;AACH;AACJ,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA,4BACI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,QAAD;AAAU,MAAA,OAAO,EAAEC;AAAnB;AAAA;AAAA;AAAA;AAAA,YANJ,eAOI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAER,KAAjB;AAAwB,MAAA,cAAc,EAAEE;AAAxC;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA9BQH,G;;KAAAA,G;AA8BR;AAED,eAAeA,GAAf","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nimport { TodoForm } from './components/TodoForm';\nimport { TodoList } from './components/TodoList';\n\nfunction App() {\n    const [todos, setTodos] = useState<Array<Todo>>([]);\n\n    const toggleComplete: ToggleComplete = selectedTodo => {\n        const updatedTodos = todos.map(todo => {\n            if (todo === selectedTodo) {\n                return { ...todo, complete: !todo.complete };\n            }\n            return todo;\n        });\n        setTodos(updatedTodos);\n    };\n\n    const addTodo: AddTodo = newTodo => {\n        if (newTodo !== \"\") {\n            setTodos([...todos, { text: newTodo, complete: false }]);\n        }\n    };\n\n    return (\n        <div className=\"todo-app\">\n            <header>\n                <h1>\n                    Todo App\n                </h1>\n            </header>\n            <TodoForm addTodo={addTodo}/>\n            <TodoList todos={todos} toggleComplete={toggleComplete}/>\n        </div>\n    );\n};\n\nexport default App;"]},"metadata":{},"sourceType":"module"}