{"ast":null,"code":"/*!\n  * Bootstrap selector-engine.js v5.0.0-beta2 (https://getbootstrap.com/)\n  * Copyright 2011-2021 The Bootstrap Authors (https://github.com/twbs/bootstrap/graphs/contributors)\n  * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n  */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.SelectorEngine = factory());\n})(this, function () {\n  'use strict';\n  /**\n   * --------------------------------------------------------------------------\n   * Bootstrap (v5.0.0-beta2): dom/selector-engine.js\n   * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n   * --------------------------------------------------------------------------\n   */\n\n  /**\n   * ------------------------------------------------------------------------\n   * Constants\n   * ------------------------------------------------------------------------\n   */\n\n  var NODE_TEXT = 3;\n  var SelectorEngine = {\n    find: function find(selector, element) {\n      var _ref;\n\n      if (element === void 0) {\n        element = document.documentElement;\n      }\n\n      return (_ref = []).concat.apply(_ref, Element.prototype.querySelectorAll.call(element, selector));\n    },\n    findOne: function findOne(selector, element) {\n      if (element === void 0) {\n        element = document.documentElement;\n      }\n\n      return Element.prototype.querySelector.call(element, selector);\n    },\n    children: function children(element, selector) {\n      var _ref2;\n\n      return (_ref2 = []).concat.apply(_ref2, element.children).filter(function (child) {\n        return child.matches(selector);\n      });\n    },\n    parents: function parents(element, selector) {\n      var parents = [];\n      var ancestor = element.parentNode;\n\n      while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n        if (ancestor.matches(selector)) {\n          parents.push(ancestor);\n        }\n\n        ancestor = ancestor.parentNode;\n      }\n\n      return parents;\n    },\n    prev: function prev(element, selector) {\n      var previous = element.previousElementSibling;\n\n      while (previous) {\n        if (previous.matches(selector)) {\n          return [previous];\n        }\n\n        previous = previous.previousElementSibling;\n      }\n\n      return [];\n    },\n    next: function next(element, selector) {\n      var next = element.nextElementSibling;\n\n      while (next) {\n        if (next.matches(selector)) {\n          return [next];\n        }\n\n        next = next.nextElementSibling;\n      }\n\n      return [];\n    }\n  };\n  return SelectorEngine;\n});","map":{"version":3,"sources":["../../src/dom/selector-engine.js"],"names":["NODE_TEXT","SelectorEngine","find","element","document","documentElement","Element","findOne","children","child","parents","ancestor","Node","prev","previous","next"],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,SAAS,GAAf,CAAA;MAEMC,cAAc,GAAG;AACrBC,IAAAA,IADqB,EAAA,SAAA,IAAA,CAAA,QAAA,EAAA,OAAA,EAC8B;AAAA,UAAA,IAAA;;AAAA,UAApCC,OAAoC,KAAA,KAAA,CAAA,EAAA;AAApCA,QAAAA,OAAoC,GAA1BC,QAAQ,CAACC,eAAnBF;AAAoC;;AACjD,aAAO,CAAA,IAAA,GAAA,EAAA,EAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAaG,OAAO,CAAPA,SAAAA,CAAAA,gBAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAApB,QAAoBA,CAAb,CAAP;AAFmB,KAAA;AAKrBC,IAAAA,OALqB,EAAA,SAAA,OAAA,CAAA,QAAA,EAAA,OAAA,EAKiC;AAAA,UAApCJ,OAAoC,KAAA,KAAA,CAAA,EAAA;AAApCA,QAAAA,OAAoC,GAA1BC,QAAQ,CAACC,eAAnBF;AAAoC;;AACpD,aAAOG,OAAO,CAAPA,SAAAA,CAAAA,aAAAA,CAAAA,IAAAA,CAAAA,OAAAA,EAAP,QAAOA,CAAP;AANmB,KAAA;AASrBE,IAAAA,QATqB,EAAA,SAAA,QAAA,CAAA,OAAA,EAAA,QAAA,EASO;AAAA,UAAA,KAAA;;AAC1B,aAAO,CAAA,KAAA,GAAA,EAAA,EAAA,MAAA,CAAA,KAAA,CAAA,KAAA,EAAaL,OAAO,CAApB,QAAA,EAAA,MAAA,CACG,UAAA,KAAA,EAAK;AAAA,eAAIM,KAAK,CAALA,OAAAA,CAAJ,QAAIA,CAAJ;AADf,OAAO,CAAP;AAVmB,KAAA;AAcrBC,IAAAA,OAdqB,EAAA,SAAA,OAAA,CAAA,OAAA,EAAA,QAAA,EAcM;AACzB,UAAMA,OAAO,GAAb,EAAA;AAEA,UAAIC,QAAQ,GAAGR,OAAO,CAAtB,UAAA;;AAEA,aAAOQ,QAAQ,IAAIA,QAAQ,CAARA,QAAAA,KAAsBC,IAAI,CAAtCD,YAAAA,IAAuDA,QAAQ,CAARA,QAAAA,KAA9D,SAAA,EAA+F;AAC7F,YAAIA,QAAQ,CAARA,OAAAA,CAAJ,QAAIA,CAAJ,EAAgC;AAC9BD,UAAAA,OAAO,CAAPA,IAAAA,CAAAA,QAAAA;AACD;;AAEDC,QAAAA,QAAQ,GAAGA,QAAQ,CAAnBA,UAAAA;AACD;;AAED,aAAA,OAAA;AA3BmB,KAAA;AA8BrBE,IAAAA,IA9BqB,EAAA,SAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EA8BG;AACtB,UAAIC,QAAQ,GAAGX,OAAO,CAAtB,sBAAA;;AAEA,aAAA,QAAA,EAAiB;AACf,YAAIW,QAAQ,CAARA,OAAAA,CAAJ,QAAIA,CAAJ,EAAgC;AAC9B,iBAAO,CAAP,QAAO,CAAP;AACD;;AAEDA,QAAAA,QAAQ,GAAGA,QAAQ,CAAnBA,sBAAAA;AACD;;AAED,aAAA,EAAA;AAzCmB,KAAA;AA4CrBC,IAAAA,IA5CqB,EAAA,SAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EA4CG;AACtB,UAAIA,IAAI,GAAGZ,OAAO,CAAlB,kBAAA;;AAEA,aAAA,IAAA,EAAa;AACX,YAAIY,IAAI,CAAJA,OAAAA,CAAJ,QAAIA,CAAJ,EAA4B;AAC1B,iBAAO,CAAP,IAAO,CAAP;AACD;;AAEDA,QAAAA,IAAI,GAAGA,IAAI,CAAXA,kBAAAA;AACD;;AAED,aAAA,EAAA;AACD;AAxDoB,G","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.0-beta2): dom/selector-engine.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NODE_TEXT = 3\n\nconst SelectorEngine = {\n  find(selector, element = document.documentElement) {\n    return [].concat(...Element.prototype.querySelectorAll.call(element, selector))\n  },\n\n  findOne(selector, element = document.documentElement) {\n    return Element.prototype.querySelector.call(element, selector)\n  },\n\n  children(element, selector) {\n    return [].concat(...element.children)\n      .filter(child => child.matches(selector))\n  },\n\n  parents(element, selector) {\n    const parents = []\n\n    let ancestor = element.parentNode\n\n    while (ancestor && ancestor.nodeType === Node.ELEMENT_NODE && ancestor.nodeType !== NODE_TEXT) {\n      if (ancestor.matches(selector)) {\n        parents.push(ancestor)\n      }\n\n      ancestor = ancestor.parentNode\n    }\n\n    return parents\n  },\n\n  prev(element, selector) {\n    let previous = element.previousElementSibling\n\n    while (previous) {\n      if (previous.matches(selector)) {\n        return [previous]\n      }\n\n      previous = previous.previousElementSibling\n    }\n\n    return []\n  },\n\n  next(element, selector) {\n    let next = element.nextElementSibling\n\n    while (next) {\n      if (next.matches(selector)) {\n        return [next]\n      }\n\n      next = next.nextElementSibling\n    }\n\n    return []\n  }\n}\n\nexport default SelectorEngine\n"]},"metadata":{},"sourceType":"script"}