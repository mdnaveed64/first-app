{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"E:\\\\workspace\\\\05-RCJS-EVNG\\\\React-JS\\\\React-JS-Core-module\\\\first-app\\\\src\\\\Components\\\\TodoForm.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nexport const TodoForm = ({\n  addTodo\n}) => {\n  _s();\n\n  const [newTodo, setNewTodo] = useState(\"\");\n\n  const handleChange = e => {\n    setNewTodo(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    addTodo(newTodo);\n    setNewTodo(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: newTodo,\n      className: \"todo-input\",\n      placeholder: \"Add a todo\",\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      className: \"todo-button\",\n      onClick: handleSubmit,\n      children: \"Add Todo\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoForm, \"oyCy+yC4LrN9rT+2zASGlvYyUZ8=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["E:/workspace/05-RCJS-EVNG/React-JS/React-JS-Core-module/first-app/src/Components/TodoForm.tsx"],"names":["React","useState","TodoForm","addTodo","newTodo","setNewTodo","handleChange","e","target","value","handleSubmit","preventDefault"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAwD,OAAxD;AAMA,OAAO,MAAMC,QAAiC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAiB;AAAA;;AAC9D,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBJ,QAAQ,CAAS,EAAT,CAAtC;;AAEA,QAAMK,YAAY,GAAIC,CAAD,IAAsC;AACvDF,IAAAA,UAAU,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AACH,GAFD;;AAIA,QAAMC,YAAY,GAAIH,CAAD,IAAqC;AACtDA,IAAAA,CAAC,CAACI,cAAF;AACAR,IAAAA,OAAO,CAACC,OAAD,CAAP;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACH,GAJD;;AAMA,sBACI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAAA,4BACI;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,KAAK,EAAED,OAA1B;AAAmC,MAAA,SAAS,EAAC,YAA7C;AAA0D,MAAA,WAAW,EAAC,YAAtE;AAAmF,MAAA,QAAQ,EAAEE;AAA7F;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,SAAS,EAAC,aAAhC;AAA8C,MAAA,OAAO,EAAEI,YAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CArBM;;GAAMR,Q;;KAAAA,Q;AAsBb,eAAeA,QAAf","sourcesContent":["import React, { useState, ChangeEvent, FormEvent } from 'react';\r\n\r\ninterface TodoFormProps {\r\n    addTodo: AddTodo;\r\n}\r\n\r\nexport const TodoForm: React.FC<TodoFormProps> = ({ addTodo }) => {\r\n    const [newTodo, setNewTodo] = useState<string>(\"\");\r\n\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setNewTodo(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent<HTMLButtonElement>) => {\r\n        e.preventDefault();\r\n        addTodo(newTodo);\r\n        setNewTodo(\"\");\r\n    }\r\n\r\n    return (\r\n        <form className=\"todo-form\">\r\n            <input type=\"text\" value={newTodo} className=\"todo-input\" placeholder=\"Add a todo\" onChange={handleChange} />\r\n            <button type=\"submit\" className=\"todo-button\" onClick={handleSubmit}>\r\n                Add Todo\r\n            </button>\r\n        </form>\r\n    )\r\n}\r\nexport default TodoForm;"]},"metadata":{},"sourceType":"module"}