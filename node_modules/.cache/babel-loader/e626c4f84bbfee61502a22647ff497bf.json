{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\workspace\\\\05-RCJS-EVNG\\\\React-JS\\\\React-JS-Core-module\\\\first-app\\\\src\\\\components\\\\AuthUser.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\n\nlet AuthUser = () => {\n  _s();\n\n  let [authState, setAuthState] = useState({\n    isLoggedIn: false\n  });\n\n  let login = () => {\n    setAuthState({\n      isLoggedIn: true\n    });\n  };\n\n  let logout = () => {\n    setAuthState({\n      isLoggedIn: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \" AuthUser Components\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AuthUser, \"bN25UfkSGnWNMqfNZzTFEwXSCHo=\");\n\n_c = AuthUser;\nexport default AuthUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthUser\");","map":{"version":3,"sources":["D:/workspace/05-RCJS-EVNG/React-JS/React-JS-Core-module/first-app/src/components/AuthUser.tsx"],"names":["React","useState","AuthUser","authState","setAuthState","isLoggedIn","login","logout"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAMA,IAAIC,QAAyB,GAAE,MAAK;AAAA;;AAChC,MAAI,CAACC,SAAD,EAAWC,YAAX,IAA2BH,QAAQ,CAAS;AAC5CI,IAAAA,UAAU,EAAE;AADgC,GAAT,CAAvC;;AAGA,MAAIC,KAAK,GAAE,MAAK;AACZF,IAAAA,YAAY,CAAC;AACTC,MAAAA,UAAU,EAAC;AADF,KAAD,CAAZ;AAGH,GAJD;;AAKA,MAAIE,MAAM,GAAE,MAAK;AACbH,IAAAA,YAAY,CAAC;AACTC,MAAAA,UAAU,EAAC;AADF,KAAD,CAAZ;AAGH,GAJD;;AAMA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH,CArBD;;GAAIH,Q;;KAAAA,Q;AAsBJ,eAAeA,QAAf","sourcesContent":["import React, {useState} from \"react\";\r\ninterface IProps {}\r\ninterface IState {\r\n    isLoggedIn : boolean;\r\n}\r\n\r\nlet AuthUser:React.FC<IProps> =() =>{\r\n    let [authState,setAuthState] = useState<IState>({\r\n        isLoggedIn: false\r\n    });\r\n    let login =() =>{\r\n        setAuthState({\r\n            isLoggedIn:true\r\n        });\r\n    };\r\n    let logout =() =>{\r\n        setAuthState({\r\n            isLoggedIn:false\r\n        });\r\n    };\r\n\r\n    return(\r\n        <React.Fragment>\r\n            <h2> AuthUser Components</h2>\r\n\r\n        </React.Fragment>\r\n    )\r\n};\r\nexport default AuthUser;\r\n"]},"metadata":{},"sourceType":"module"}